from utils import *
from collections import deque

data="""         A           
         A           
  #######.#########  
  #######.........#  
  #######.#######.#  
  #######.#######.#  
  #######.#######.#  
  #####  B    ###.#  
BC...##  C    ###.#  
  ##.##       ###.#  
  ##...DE  F  ###.#  
  #####    G  ###.#  
  #########.#####.#  
DE..#######...###.#  
  #.#########.###.#  
FG..#########.....#  
  ###########.#####  
             Z       
             Z       """
data="""                               O         L       Z Z   P       X         P                                   
                               E         W       Z P   F       W         S                                   
  #############################.#########.#######.#.###.#######.#########.#################################  
  #...#.#.#.#.#.#...........#.#.......#.....#.#.#.....#.#.....#.#.....#.#...........#.....#.#.#.#.#.#...#.#  
  #.###.#.#.#.#.#####.#.###.#.#######.###.###.#.#.#.###.#.###.#.###.###.###.###########.###.#.#.#.#.#.###.#  
  #.#.....#...........#...#.....#...#.#.......#...#...#...#...#.#...#...........#...#.#...................#  
  #.###.#####.#.###.#.###.###.#####.#.#.#######.###########.#.#.#.#.#########.###.###.#.###.#.#.#.###.###.#  
  #.....#.....#.#.#.#...#.#...........#...#.#...#...#.#.....#.#...#...#...........#.#.#...#.#.#.#.#...#...#  
  #####.#######.#.#########.#.#.#.###.#.#.#.###.###.#.#.###.#.###.#.#.#.#.#.#####.#.#.#.#######.#.###.###.#  
  #...#.....#...#.#.#.......#.#.#...#.#.#.....#.....#...#...#.#.#.#.#.#.#.#.....#.#...#...#...#.#...#...#.#  
  #.###.#########.#.#.#####.#####.###.###.###.#.#######.#######.#####.#######.###.###.#.#####.###.#########  
  #...#.#...#.#.#.#.#.#.....#.......#...#.#...#.......#...#...............#...#.....#...........#.#...#.#.#  
  #.###.###.#.#.#.#.#####.#####.#.#.#######.#.###.#####.#######.#.###.###.###.#####.#.#.###########.###.#.#  
  #.........#.....#...#...#.....#.#.#...#.#.#.#...#...#.....#.#.#.#.#.#.#.#.....#.#...#.#.#.#.#...#.#.#.#.#  
  ###.#######.#######.#.###.#####.#####.#.###.#.#####.#.#####.#####.#.#.#.###.###.###.###.#.#.#.###.#.#.#.#  
  #.........#.#.#.#...#.#.#.#...........#.#.#.#...#.#.....#.#.......#...#.#.#.#...#.#.........#...#.#.#...#  
  #.#########.#.#.#.#####.#######.#.#.#.#.#.#.###.#.###.###.#.#.###.#.#####.#.#.###.###.#.#.###.#.#.#.#.###  
  #.....#.......#...#.........#...#.#.#.#.....#.....#.......#.#...#.#.#.........#.......#.#.#.#.#.#.#.....#  
  ###.#.###.#####.#######.###.#.###.#.#####.#####.#.###.#######.#####.#.###############.###.#.#.###.###.###  
  #.#.#.#...#.....#...#...#...#...#.#.#.#.#.#...#.#...#...#.#.....#.#.#.#.............#.#...#...#.....#...#  
  #.#.###.#####.#####.#######.#.#######.#.#.###.#####.#.###.#.#.###.#.#.#.#.#.#####.###########.#.#####.###  
  #.......#.#...#.#...#.#...........#.#.#.....#.......#...#.#.#.......#...#.#.#...#.#.#.#.#.........#.#...#  
  #.###.###.###.#.###.#.#########.###.#.#.#.###.###.###.###.#####.###.#####.###.#####.#.#.#####.###.#.#.#.#  
  #.#.....#.#...#.#.#...#.#.........#...#.#.#...#...#.......#.....#.#.#...........#.........#.#.#.#.#...#.#  
  #######.#.###.#.#.#.###.#######.###.#.###.###.###.###.###.#.#.###.###.#.###.#####.#########.#.#.###.#####  
  #...........#.#.#.....#.............#.#.#.#.....#.#...#.#.#.#.......#.#.#.....#.#.#...#.#...#.....#...#.#  
  #########.###.#.#.#######.#.#.#####.###.#.#####.#.#.###.#.###.#####.#.#####.###.#.###.#.#.#####.###.###.#  
  #.#.#.#.#.#...#.....#.#.#.#.#.#.........#...#...#.#.#.......#.#.....#...#...#...#.#...#.#.....#...#.....#  
  #.#.#.#.#.###.#.#.#.#.#.#######.#########.###.###########.#####.#####.#########.#.###.#.###.###.#####.#.#  
  #...#.#.....#...#.#.#...#.#    Y         H   N           T     S     W        #.#.#.....#.#.#...#.#.#.#.#  
  #.###.###.###.#.#####.###.#    T         V   P           Z     B     Z        #.#.###.#.#.#.###.#.#.#.###  
  #.#...#.#.....#...#.....#.#                                                   #.....#.#...........#...#.#  
  #.###.#.#.#.#########.#.#.#                                                   #.#.#####.#########.#.#.#.#  
TZ......#...#.....#...#.#...#                                                 PF..#.#...#.....#.......#....TF
  #.#.#####.#.#####.#.#####.#                                                   #.#.#.#.###.#.###.#.#####.#  
  #.#...#...#.....#.#.#.#...#                                                   #.#.#.#...#.#.#.#.#.#.....#  
  ###.#.#.###.#.#.###.#.###.#                                                   #.#.#.###.#.###.###########  
  #.#.#...#...#.#............XH                                                 #.#...#.....#.#.....#.....#  
  #.#####.#####.#.#.#.###.#.#                                                   ###.#########.###.#.#####.#  
  #...#.#.#.....#.#.#.#.#.#.#                                                   #...#.............#.#.....#  
  #.#.#.#.#########.###.#####                                                   ###.#.###.#.#####.#####.#.#  
NJ..#.#.#.#...#.#.#.....#...#                                                   #.#.#...#.#.#...........#..NP
  ###.#.###.#.#.#.#.#######.#                                                   #.#####.#####.###.###.#.###  
  #.....#.#.#.#...#.#.......#                                                   #.......#...#.#.....#.#...#  
  #####.#.#.#####.###.#.###.#                                                   #.#########.###############  
  #...#...............#.#.#..KX                                               PS....#.....#.#.#.#...#...#.#  
  #.#####################.###                                                   #########.#.#.#.#.#####.#.#  
  #.................#.......#                                                   #..........................YT
  #.###.#.#.###.###.#.###.###                                                   #.###.###.#.#.#.#.###.###.#  
KX....#.#.#.#...#.....#.....#                                                 IF....#.#...#.#.#.#...#.#...#  
  #.###.###.#####.#.###.#####                                                   #########.#################  
  #.#...#...#.#...#.#........XW                                                 #...#...#.#.#.#.#..........HV
  #.###.###.#.#####.#.#######                                                   #.#####.###.#.#.#.#####.#.#  
  #.#.#.#.#.#.#...#.#.#.#...#                                                 XG..#.#.#...#...#...#...#.#.#  
  ###.###.###.###.#####.#.#.#                                                   #.#.#.#.###.#.#.#.#.#####.#  
  #.#.#.#.#.#.#.#.........#.#                                                   #...#.......#.#.#.#...#.#.#  
  #.#.#.#.#.#.#.#######.###.#                                                   #.#####.#.#.#####.###.#.###  
SO....#.........#.#.....#...#                                                   #.......#.#.......#...#.#.#  
  #.###.###.#.#.#.###.###.###                                                   #####.#.#####.#######.#.#.#  
  #.....#...#.#.......#.#....XX                                               MU..#...#.....#.#...........#  
  #.#.###.#####.#####.#.#.###                                                   #.#####.#######.#######.###  
  #.#.#.#.#.#.....#.....#.#..YH                                                 #.#.#...#.#...........#...#  
  #####.###.###############.#                                                   #.#.#####.#.###.#.#.###.#.#  
  #...#...#...#.#.#...#...#.#                                                   #.#...#.#.#...#.#.#...#.#..TH
  #.#####.#.###.#.#.###.###.#                                                   #.#.###.#.#######.#########  
XH..#.#.#.....#.#...#...#.#.#                                                   #...................#.#...#  
  #.#.#.#.#.###.###.#.#.#.#.#                                                   #####################.###.#  
  #.......#...........#.....#                                                   #.....#.........#..........VD
  #########.###.###.#.#.#.###                                                   #.###.#.#.#.###.#.#.#####.#  
IF......#.#.#.#.#...#.#.#.#.#                                                 OE..#...#.#.#.#.....#...#...#  
  #.#####.#.#.#######.#.###.#                                                   #.#.###.###.###.###.#.#.###  
  #...#.#.#...#.#.#...#.#.#..LW                                                 #.#...#...#.#.....#.#.#.#..AA
  #.#.#.#.#####.#.#######.#.#                                                   #####.#.#.#####.#.###.#.#.#  
YH..#.#...#.......#...#...#..NJ                                                 #.......#.#...#.#.#...#...#  
  #.###.#.###.#.#.#.###.#.#.#                                                   #####.#####.#.#######.#####  
  #.....#.....#.#.......#...#                                                   #.#.....#.#.#.#.#...#.#...#  
  ###########################                                                   #.###.###.#.###.#.#####.#.#  
  #...............#.#.......#                                                   #.#.#.#.#.....#...#.....#..KI
  ###.#####.#.###.#.#.#.#.#.#                                                   #.#.###.#.#######.#####.#.#  
  #.....#.#.#.#.....#.#.#.#..SO                                               TF..#...#...#.#.......#...#.#  
  #.#####.###.###.#.###.#.#.#                                                   #.#.#.#.#.#.###.#.###.###.#  
WZ..........#.#.#.#.#.#.#.#.#                                                   #...#...#.......#.......#.#  
  #.###.#.#.###.###.#.#.###.#                                                   #.#.###.#.#.###.#.###.#####  
  #...#.#.#.#.............#.#                                                   #.#...#.#.#...#.#...#.....#  
  #.###.#####.#####.#.#.###.#      Q           T       K   V         Z     T    ###.#.#.#####.#.###.#.#.###  
  #.#.....#.#...#...#.#...#.#      B           H       I   D         P     G    #...#.#...#...#...#.#.#...#  
  #########.#.###.###.#####.#######.###########.#######.###.#########.#####.###########.###.#.#.#.#####.###  
  #...#.......#.#...#.#.#.#.#.#.........#.#.#...#...#...#...#.#.#.....#.....#...#...#.#.#...#.#.#...#.....#  
  ###.#.#.#####.#.#####.#.###.###.###.###.#.#.###.#.###.#.###.#.#.#######.#.#.###.###.#.#####.###.#.#.#.###  
  #.....#.#.......#...#.#.........#.....#.#.#.#...#...#.#.....#.........#.#...#...#...#.....#.#...#.#.#...#  
  #.#.#.###.#####.#.###.#.###.#.#####.#.#.#.#.###.###.#.#.#.#.#.#.#.#########.#.###.#.#########.#.#.###.###  
  #.#.#.#...#.#.........#.#...#.#.#...#.#.....#...#.#...#.#.#.#.#.#...#...#.#.......#.....#...#.#.#...#...#  
  #.#####.###.#.#####.#######.###.#.###.#.#######.###.###.#####.###.###.###.#.#.###.###.#.#.#.###.#.###.###  
  #.#...#.#.......#.........#.#.....#.#.#.......#.#.#.#.....#.#.#.......#.....#...#.#.#.#...#.#...#...#...#  
  #.###.#.#.###.###.#.#######.#######.#.#######.#.#.#.###.#.#.#.#####.###.#.###.###.#.###.###.#####.#.#.#.#  
  #.#.....#...#...#.#.#...#.#.#.#.........#.#...#...#.#...#...#.#.......#.#...#...#.....#...#.#.#.#.#.#.#.#  
  ###.#.#.#.#.###.###.###.#.###.#######.###.#.#.#.#.#####.#.#########.#.###.#########.###.###.#.#.#.#######  
  #...#.#.#.#.#...#...#.......#...#.#.....#...#.#.#.....#.#.#.....#...#.#...#.....#.#.#.....#.#...........#  
  ###.###.#####.#####.#####.###.###.###.#######.#.#.#######.###.#.###.#####.#.#####.#####.#.###.#.#####.#.#  
  #.....#.#...#.#.....#.....#.#.#...#.#.#...#...#.#.#.#...#...#.#.....#...#...........#...#.#.#.#.#.....#.#  
  #.###.#####.#.#####.#####.#.#.###.#.#.#.#####.#.###.###.###.#####.#.###.#.#.###.###########.###.#####.#.#  
  #.#.#.#.......#...#.#...............#...#.#...#...#.........#.....#.#.....#.#.#.#.........#.#.......#.#.#  
  ###.#######.#####.#######.#.###.###.#.#.#.###.#.#.#######.#.#.#.#.###.###.###.###.#########.###.#########  
  #.#...#...#.#.#.#...#.....#.#...#.#.#.#.#.....#.#.#.#.#...#.#.#.#.#.....#.......#.....#.#.....#...#...#.#  
  #.#.#####.###.#.#.#.#.#.#######.#.#.#.#####.###.###.#.#####.#.#######.#######.###.#.###.#.#########.###.#  
  #.....#...#.....#.#.#.#.#.......#.#...#.#...#.#...#.#...#.#.#...#.#.........#.#...#.#.............#.#...#  
  #.###.#.#.###.#####.#.#########.#.#####.#.###.#.###.#.###.#.###.#.#####.#.#####.#####.#.#.#.#.###.#.###.#  
  #.#.#.#.#.............#.................#.#...#.#.....#.......#.....#...#.#.....#.....#.#.#.#.#.#.......#  
  ###.#.#####.###.#.#####.#.###.#.#.###.#.#.#.#.#.###.#####.#####.#.#.###.###.#######.###########.#.#####.#  
  #.............#.#.#.#...#.#...#.#.#...#.#.#.#.#...#...#.......#.#.#.#...#.....................#.#.....#.#  
  #####.#.###.#.#.###.###.###.#.###.#.#####.#.#.#.###.#######.#######.#.###.#.#.#.#.#.###.#.#####.###.###.#  
  #.....#...#.#.#.#.......#...#.#...#.#.......#.#.........#...#.......#.....#.#.#.#.#...#.#.......#.....#.#  
  ###################################.#########.#####.#####.#####.###########.#############################  
                                     X         S     T     Q     M           X                               
                                     G         B     G     B     U           X                               """
all_portals = {}

def get_portal(name,  outer, level):
    if (name,  outer, level) in all_portals:
        return all_portals[(name,  outer, level)]
    name= all_portals[(name,  outer, 0)].name
    loc= all_portals[(name,  outer, 0)].loc
    p= Portal(loc, name, level)
    if abs(level)<20:
        for l in all_portals[(name,  outer, 0)].links:
            p.links.append((get_portal(l[0].name, l[0].outer, level),l[1]))
    return p
    
class Portal(object):
    def __init__(self, loc, name, level):
        self.loc = loc
        self.name = name
        self.level = level
        self.outer=False
        if loc.x==2 or loc.y==2 or loc.x==height-3 or loc.y == width-3:
            self.outer=True

        self.links = []
        all_portals[self.key()]=self

    def __hash__(self):
        return hash(str(self))

    def __eq__(self, other):
        return (self.name == other.name) and (self.level == other.level) and (self.outer == other.outer)
    
    def key(self):
        return (self.name, self.outer, self.level)

    def get_routes(self):
        routes=[]
        routes.extend(self.links)
        if self.name!="AA" and self.name!="ZZ":
            if self.outer:
                routes.append((get_portal(self.name,not self.outer, self.level+1),1))
            else:
                routes.append((get_portal(self.name,not self.outer, self.level-1),1))
        return routes
            

    def print(self):
        print("#################START#####################")
        print(self)
        for l in self.get_routes():
            print(l)
        print("#################END#####################")
    
    def __repr__(self):
        return self.name + (" Outer " if self.outer else " Inner ") + str(self.level)

board = {}
path = set()
width=0
height=0
for x, row in enumerate(data.split("\n")):
    height=x+1
    for y, char in enumerate(row):
        width=y+1
        p = Point(x,y)
        board[p]=char
        if char==".":
            path.add(p)
print (width, height)
portals_by_location = {}
for x, row in enumerate(data.split("\n")):
    for y, char in enumerate(row):
        p = Point(x,y)
        if p in path:
            for d in DIRS_4:
                v = board[p+d]
                if v in UPPER_LETTERS: # its a label
                    v2 = board[p+d+d]
                    if d == DIRS[0] or d==DIRS[1]:
                        name=v+v2
                    else:
                        name=v2+v
                    portals_by_location[p] = Portal(p, name, 0)
        
            
print(portals_by_location)

for portal in portals_by_location.values():

    to_look = deque()
    to_look.append((portal.loc,0))
    visited = set()
    while to_look:
        n,steps = to_look.pop()
        if n in visited:
            continue
        visited.add(n)
        if n in portals_by_location and n!=portal.loc:
            portal.links.append((portals_by_location[n],steps))

        for d in DIRS_4:
            if n+d in path:
                to_look.append((n+d,steps+1))

class State(object):
    def __init__(self, portal_at, visited, steps, history):
        self.portal_at=portal_at
        self.visited = visited
        self.steps = steps
        self.history = history

    def is_finished(self):
        return self.portal_at == get_portal("ZZ", True, 0)

    def move_to(self, new_portal, ex_steps):
        if new_portal in self.visited:
            return None
        new_visited = self.visited.copy()
        new_visited.add(self.portal_at)
        new_history = self.history.copy()
        new_history.append("Moved from "+str(self.portal_at)+" to "+str(new_portal))
        return State(new_portal, new_visited, self.steps+ex_steps, new_history)

    def __hash__(self):
        return hash(self.portal_at)

    def __eq__(self, other):
        return self.portal_at==other.portal_at

    def __repr__(self):
        s= "##############START###########\n"
        s+=str(self.portal_at) + " Steps:"+str(self.steps)
        for h in self.history:
            s+=" \n "+h+""
        return s
            


q = deque()
q.append(State(get_portal("AA", True, 0), set(), 0, []))

finished_states = set()
seen_states= {}
while q:
    state = q.pop()
  
    if state in seen_states:
        if seen_states[state]<state.steps:
            
            continue
    seen_states[state]=state.steps
    
    if state.is_finished():
        finished_states.add(state)
        print("Found a path"+str(state.steps))
        continue
    
 
    for r,ex_steps in state.portal_at.get_routes():
        new_state= state.move_to(r,ex_steps)
        if new_state:
            q.append(new_state)

        


for f in finished_states:
    print(f)



